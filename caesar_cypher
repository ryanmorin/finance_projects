import my_module

direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
text = input("Type your message:\n").lower()
shift = int(input("Type the shift number:\n"))

encoded_word = list()
decoded_word = list()

def cypher(text)-> str:
    alpha1 = my_module.alphabet[0:shift]
    alpha2 = my_module.alphabet[shift:26]
    alpha_shift = alpha2 + alpha1
    if direction == 'encode':
        for letter in text:
            
            # join the list into a string - use find to give the location of the letter
            if ''.join(my_module.alphabet).find(letter) != -1:
                
                # use the location of the letter in the unshifted alphabet to select the corresponding letter in shifted
                encoded_word.append(alpha_shift[''.join(my_module.alphabet).find(letter)])
            else:
                
                # if the letter isn't in the unshifted alphabet then just append to the new list
                encoded_word.append(letter)
        # join the list into a string        
        return ''.join(encoded_word)
    else:
        for letter in text:
            
            # use the shifted list in place of the alphabet above and reverse the process
            if ''.join(alpha_shift).find(letter) != -1:
                decoded_word.append(my_module.alphabet[''.join(alpha_shift).find(letter)])
            else:
                decoded_word.append(letter)
        return ''.join(decoded_word)

print(cypher(text=text))
